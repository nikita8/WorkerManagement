AWSTemplateFormatVersion: "2010-09-09"
Description: WorkerManagement ECS Service Definition

Parameters:
  EnvironmentName:
    Default: alpha
    Description: Name of the environment this cloudformation stack belongs to
    Type: String
  EnvironmentType:
    Default: nonproduction
    Description: Type of the environment for this stack
    Type: String
    AllowedValues:
      - nonproduction
      - production
  AppVersion:
    Default: latest
    Type: String

Resources:

  CloudWatchLogsGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub /aws/ecs/WKI-${EnvironmentName}
      RetentionInDays: 7

  WorkerManagementTaskDefinition:
    Type: AWS::ECS::TaskDefinition
    Properties:
      Cpu: "256"
      Memory: "512"
      ExecutionRoleArn:
        Fn::ImportValue: !Sub ${EnvironmentName}:ECSTaskRole
      TaskRoleArn:
        Fn::ImportValue: !Sub ${EnvironmentName}:ECSServiceExecutionRole
      Family: !Sub wm-srv-task-${EnvironmentName}
      NetworkMode: awsvpc
      RequiresCompatibilities:
        - FARGATE
      ContainerDefinitions:
        -
          Name: WorkerManagementAPI
          Image: !Sub 574574226067.dkr.ecr.us-east-1.amazonaws.com/worker-management:${AppVersion}
          PortMappings:
            - ContainerPort: 3000
          LogConfiguration:
            LogDriver: awslogs
            Options:
              awslogs-group: !Ref CloudWatchLogsGroup
              awslogs-region: !Ref AWS::Region
              awslogs-stream-prefix: worker-mgmt-srv

  WorkerManagementECSService:
    Type: AWS::ECS::Service
    DependsOn: WebListenerRule
    Properties:
      Cluster:
        Fn::ImportValue: !Sub ${EnvironmentName}:WorkerManagementECSCluster
      DesiredCount: 1
      LaunchType: FARGATE
      LoadBalancers:
        - ContainerName: WorkerManagementAPI
          ContainerPort: 3000
          TargetGroupArn: !Ref WebTargetGroup

      NetworkConfiguration:
        AwsvpcConfiguration:
          AssignPublicIp: DISABLED
          Subnets:
          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ1Private
          - Fn::ImportValue: !Sub ${EnvironmentName}:SubnetAZ2Private
          SecurityGroups:
            - Fn::ImportValue: !Sub ${EnvironmentName}:ContainerSecurityGroup
      ServiceName: !Sub wm-srv-${EnvironmentName}
      TaskDefinition: !Ref WorkerManagementTaskDefinition
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 50

  WebTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      VpcId:
        Fn::ImportValue: !Sub ${EnvironmentName}:VPC
      Port: 80
      Protocol: HTTP
      Matcher:
        HttpCode: 200-299
      TargetType: ip
      HealthCheckIntervalSeconds: 10
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 2
      HealthCheckPath: /workers/service_status
      HealthCheckProtocol: HTTP
      TargetGroupAttributes:
      - Key: deregistration_delay.timeout_seconds
        Value: "60"

  WebListenerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn:
        Fn::ImportValue: !Sub ${EnvironmentName}:LoadBalancerListener
      Priority: 100
      Conditions:
        - Field: path-pattern
          Values:
            - /worker*
      Actions:
        - TargetGroupArn: !Ref WebTargetGroup
          Type: forward

Outputs:
  WorkerManagementServiceStatusEndpoint:
    Description: Endpoint for service status
    Value: !Sub
      - 'http://${LoadBalancerEndpoint}/workers/service_status'
      -
        LoadBalancerEndpoint:
          Fn::ImportValue: !Sub ${EnvironmentName}:WorkerManagementDomainName
